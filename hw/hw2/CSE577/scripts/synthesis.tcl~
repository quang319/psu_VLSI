{#}{

set path1 "/home/software/synopsys-2013/SAED32_EDK/lib/stdcell_rvt/db_ccs"
set path2 "/home/software/synopsys-2013/SAED32_EDK/lib/sram/db_ccs"  
set search_path "$path1 $path2 $search_path"

set search_path [concat  $search_path [list [format "%s%s"  $synopsys_root "/libraries/syn"]]]
set search_path [concat  $search_path [list "." [format "%s%s"  $synopsys_root "/dw/sim_ver"]]]

# Library Variables
#set synthetic_library [list dw_foundation.sldb]

#set target_library saed32rvt_tt1p05v25c.db
set target_library saed32rvt_ff0p85v25c.db
set target_library1 saed32sram_tt1p05v25c.db

set link_library   [concat  $target_library $target_library1 ]
set target_library "saed32rvt_ff0p85v25c.db saed32sram_tt1p05v25c.db"
set verilogout_no_tri "true"

}


#set script_dir "/home/mdl/sxr5403/CSE577"    		      	// ALl the scripts needed to run the synthesis is in this folder
set script_dir "/home/mdl/sxr5403/CSE577/" 
#source $script_dir/synopsys_dc_CSE577_read_design.tcl		// Sourcing the verilog files
source $script_dir/scripts/synopsys_dc_CSE577_read_design.tcl
source "$script_dir/scripts/input_output_delay.tcl"
source "$script_dir/scripts/clock_uncertainity.tcl"
#elaborate ProcessorCore8VStep00           			// Top level module name.  RTL is being converted into std.cell netlsit
elaborate VShiftUnit

#link                                      			// linking the technology library to the above netlist.
link 
#create_clock clk -name "clk" -period 2                         // creating the clk signal with port name clk, with time period of 2ns.
create_clock clk -name "clk" -period 2 

#saif_map -start                
#set_power_prediction 

#########  add wireload information. #########
set_max_area 0

#compile                                                       // Compiling the above generated netlist.
compile 
write -format ddc -hierarchy -output processorCore.ddc -hier

#compile_ultra                                                 // For further optimization.  
compile_ultra      

#                                                              // generation of report
report_timing > timing.rpt
report_area  > area.rpt 
report_power > power_nosaif.rpt
report_cell > cell.rpt
change_names -rules verilog -hierarchy
write -format ddc -hierarchy -output processor.ddc -hier
write -f verilog -hierarchy -output  processor.v
write_sdc processor.sdc


##set_svf output.svf
